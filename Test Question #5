#include <iostream>

struct TreeNode 
{
    int info;
    TreeNode * left, * right;
    TreeNode(int d, TreeNode * lptr, TreeNode * rptr)
      : info(d), left(lptr), right(rptr)
    { }
    
};

int sumWithPosParent(TreeNode * root, bool countSelf){
  
  //base case
  if(root == nullptr){
    return 0;
  }

  int sum;
  
  if(countSelf){
    sum += root->info;
  }
  
  sum += sumWithPosParent(root->left, root->info > 0);
  sum += sumWithPosParent(root->right, root->info > 0);
  
  
  return sum;

}

int main(){
  new TreeNode * child1 = new TreeNode(2, nullptr, nullptr);
  new Treenode * child2 = new TreeNode(4, nullptr, nullptr);
  new TreeNode * root = {5, child1, child2};
  cout << sumWithPosParent(root, true);
}
